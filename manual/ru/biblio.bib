@article{hector2016,
  title    = {pyGrav, a Python-based program for handling and processing relative gravity data},
  journal  = {Computers & Geosciences},
  volume   = {91},
  pages    = {90-97},
  year     = {2016},
  issn     = {0098-3004},
  doi      = {https://doi.org/10.1016/j.cageo.2016.03.010},
  url      = {https://www.sciencedirect.com/science/article/pii/S009830041630084X},
  author   = {Basile Hector and Jacques Hinderer},
  keywords = {Relative-gravity, Time-variable gravity, Object-oriented, Python},
  abstract = {pyGrav is a Python-based open-source software dedicated to the complete processing of relative-gravity data. It is particularly suited for time-lapse gravity surveys where high precision is sought. Its purpose is to bind together single-task processing codes in a user-friendly interface for handy and fast treatment of raw gravity data from many stations of a network. The intuitive object-based implementation allows to easily integrate additional functions (reading/writing routines, processing schemes, data plots) related to the appropriate object (a station, a loop, or a survey). This makes pyGrav an evolving tool. Raw data can be corrected for tides and air pressure effects. The data selection step features a double table-plot graphical window with either manual or automatic selection according to specific thresholds on data channels (tilts, gravity values, gravity standard deviation, duration of measurements, etc.). Instrumental drifts and gravity residuals are obtained by least square analysis of the dataset. This first step leads to the gravity simple differences between a reference point and any point of the network. When different repetitions of the network are done, the software computes then the gravity double differences and associated errors. The program has been tested on two specific case studies: a large dataset acquired for the study of water storage changes on a small catchment in West Africa, and a dataset operated and processed by several different users for geothermal studies in northern Alsace, France. In both cases, pyGrav proved to be an efficient and easy-to-use solution for the effective processing of relative-gravity data.},
  language = {english}
}

@techreport{a10-063_new_instrument_data_report,
  author      = {Brian Ellis},
  institution = {{M}icro-g {L}a{C}oste},
  title       = {{M}icro-g {L}a{C}oste New Instrument Data Report},
  year        = {2022},
  month       = sep,
  language    = {english}
}